description: Test plan for ruleParsing.js


--------------------------------------------------------------------------------
testName: doAllRulesExist_validDataString
input inputData: array<string> (The array of rule names that should be validated for existence in the runtime rules data structure)
input inputMetaData: string (Not used for this business rule)
output: boolean

testName: doAllRulesExist_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: doAllRulesExist_inValidDataInputMetaDataString
input inputData: array<string> (The array of rule names that should be validated for existence in the runtime rules data structure) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: doAllRulesExist_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: array ([1,2,3,4,5])
output: ?

testName: doAllRulesExist_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: array ([1,2,3,4,5])
output: ?

testName: doAllRulesExist_inValidInputMetaDataInteger
input inputData: array ([1,2,3,4,5])
input inputMetaData: integer (4567)
output: ?

testName: doAllRulesExist_inValidInputMetaDataBoolean
input inputData: array ([1,2,3,4,5])
input inputMetaData: boolean (false)
output: ?

testName: doAllRulesExist_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreUndefined)
output: ?

testName: doAllRulesExist_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreNaN)
output: ?
--------------------------------------------------------------------------------
testName: doesRuleExist_validDataString
input inputData: string (The rule name that should be validated as existing in the runtime rules data structure)
input inputMetaData: string (Not used for this business rule)
output: boolean

testName: doesRuleExist_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: doesRuleExist_inValidDataInputMetaDataString
input inputData: string (The rule name that should be validated as existing in the runtime rules data structure) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: doesRuleExist_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: array ([1,2,3,4,5])
output: ?

testName: doesRuleExist_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: array ([1,2,3,4,5])
output: ?

testName: doesRuleExist_inValidInputMetaDataInteger
input inputData: array ([1,2,3,4,5])
input inputMetaData: integer (4567)
output: ?

testName: doesRuleExist_inValidInputMetaDataBoolean
input inputData: array ([1,2,3,4,5])
input inputMetaData: boolean (false)
output: ?
--------------------------------------------------------------------------------
testName: getRule_validDataString
input inputData: string (The name of the rule that should be returned if it exists as a valid rule name)
input inputMetaData: string (Not used for this business rule)
output: function (The function that was found if it exists or False if no rule is found)

testName: getRule_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: getRule_inValidDataInputMetaDataString
input inputData: string (The name of the rule that should be returned if it exists as a valid rule name) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: getRule_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: array ([1,2,3,4,5])
output: ?

testName: getRule_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: array ([1,2,3,4,5])
output: ?

testName: getRule_inValidInputMetaDataInteger
input inputData: array ([1,2,3,4,5])
input inputMetaData: integer (4567)
output: ?

testName: getRule_inValidInputMetaDataBoolean
input inputData: array ([1,2,3,4,5])
input inputMetaData: boolean (false)
output: ?
--------------------------------------------------------------------------------
testName: processRulesInternal_validDataString
input inputData: array<string|integer|boolean|object|function,string|integer|boolean|object|function> (An array of inputs, inputData & inputMetaData)
input inputMetaData: array<string> (The name(s) of the rule(s) that should be executed for modifying the input data)
output: string|integer|boolean|object|function (A modified data Object/String/Integer/Boolean/Function where the data has been modified based on the input data, input meta-data, and business rule that was executed)

testName: processRulesInternal_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: array<string> (The name(s) of the rule(s) that should be executed for modifying the input data) (testDataString)
output: ?

testName: processRulesInternal_inValidDataInputMetaDataString
input inputData: array<string|integer|boolean|object|function,string|integer|boolean|object|function> (An array of inputs, inputData & inputMetaData) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: processRulesInternal_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: array ([1,2,3,4,5])
output: ?

testName: processRulesInternal_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: array ([1,2,3,4,5])
output: ?

testName: processRulesInternal_inValidInputMetaDataInteger
input inputData: array ([1,2,3,4,5])
input inputMetaData: integer (4567)
output: ?

testName: processRulesInternal_inValidInputMetaDataBoolean
input inputData: array ([1,2,3,4,5])
input inputMetaData: boolean (false)
output: ?

testName: processRulesInternal_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: array<string> (The name(s) of the rule(s) that should be executed for modifying the input data) (inValidDataToStoreUndefined)
output: ?
status: Failed
error: TypeError: Cannot read properties of undefined (reading '0')

testName: processRulesInternal_inValidInputDataNaN
input inputData: NaN
input inputMetaData: array<string> (The name(s) of the rule(s) that should be executed for modifying the input data) (inValidDataToStoreNaN)
output: ?
status: Failed
error: TypeError: Cannot read properties of undefined (reading '0')

testName: processRulesInternal_inValidInputMetaDataUndefined
input inputData: array<string|integer|boolean|object|function,string|integer|boolean|object|function> (An array of inputs, inputData & inputMetaData) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: processRulesInternal_inValidInputMetaDataNaN
input inputData: array<string|integer|boolean|object|function,string|integer|boolean|object|function> (An array of inputs, inputData & inputMetaData) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
