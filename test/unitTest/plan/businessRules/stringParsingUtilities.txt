description: Test plan for stringParsingUtilities.js


--------------------------------------------------------------------------------
testName: parseSystemRootPath_validDataString
input inputData: string (The root path as defined by calling path.resolve(__dirname))
input inputMetaData: string (The name of the application)
output: string (A string with the path up to the application folder, where ever that is installed on the local system currently executing)

testName: parseSystemRootPath_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (The name of the application) (testDataString)
output: ?

testName: parseSystemRootPath_inValidDataInputMetaDataString
input inputData: string (The root path as defined by calling path.resolve(__dirname)) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: parseSystemRootPath_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: string (The name of the application)
output: ?
status: Failed
error: TypeError: inputData.split is not a function

testName: parseSystemRootPath_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: string (The name of the application)
output: ?

testName: parseSystemRootPath_inValidInputMetaDataInteger
input inputData: string (The root path as defined by calling path.resolve(__dirname))
input inputMetaData: integer (4567)
output: ?
status: Failed
error: TypeError: inputMetaData.includes is not a function

testName: parseSystemRootPath_inValidInputMetaDataBoolean
input inputData: string (The root path as defined by calling path.resolve(__dirname))
input inputMetaData: boolean (false)
output: ?

testName: parseSystemRootPath_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (The name of the application) (inValidDataToStoreUndefined)
output: ?

testName: parseSystemRootPath_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (The name of the application) (inValidDataToStoreNaN)
output: ?

testName: parseSystemRootPath_inValidInputMetaDataUndefined
input inputData: string (The root path as defined by calling path.resolve(__dirname)) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: parseSystemRootPath_inValidInputMetaDataNaN
input inputData: string (The root path as defined by calling path.resolve(__dirname)) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: stringToDataType_validDataString
input inputData: string (The string that should be converted to some value)
input inputMetaData: string (Not used for this business rule)
output: object|string|boolean|integer (Returns a value of whatever type the string should be converted to as appropriate)

testName: stringToDataType_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: stringToDataType_inValidDataInputMetaDataString
input inputData: string (The string that should be converted to some value) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: stringToDataType_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: string (Not used for this business rule)
output: ?
status: Failed
error: TypeError: inputData.toLowerCase is not a function

testName: stringToDataType_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: string (Not used for this business rule)
output: ?

testName: stringToDataType_inValidInputMetaDataInteger
input inputData: string (The string that should be converted to some value)
input inputMetaData: integer (4567)
output: ?

testName: stringToDataType_inValidInputMetaDataBoolean
input inputData: string (The string that should be converted to some value)
input inputMetaData: boolean (false)
output: ?

testName: stringToDataType_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreUndefined)
output: ?

testName: stringToDataType_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreNaN)
output: ?

testName: stringToDataType_inValidInputMetaDataUndefined
input inputData: string (The string that should be converted to some value) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: stringToDataType_inValidInputMetaDataNaN
input inputData: string (The string that should be converted to some value) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: stringToBoolean_validDataString
input inputData: string (A string that contains a truthy or falsy value and should be converted to a boolean value)
input inputMetaData: string (Not used for this business rule)
output: boolean

testName: stringToBoolean_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: stringToBoolean_inValidDataInputMetaDataString
input inputData: string (A string that contains a truthy or falsy value and should be converted to a boolean value) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: stringToBoolean_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: 123string321
output: ?
status: Failed
error: TypeError: inputData.toLowerCase is not a function

testName: stringToBoolean_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: 123string321
output: ?

testName: stringToBoolean_inValidInputMetaDataInteger
input inputData: 234string432
input inputMetaData: string
output: ?

testName: stringToBoolean_inValidInputMetaDataBoolean
input inputData: 234string432
input inputMetaData: string
output: ?

testName: stringToBoolean_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreUndefined)
output: ?

testName: stringToBoolean_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreNaN)
output: ?

testName: stringToBoolean_inValidInputMetaDataUndefined
input inputData: string (A string that contains a truthy or falsy value and should be converted to a boolean value) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: stringToBoolean_inValidInputMetaDataNaN
input inputData: string (A string that contains a truthy or falsy value and should be converted to a boolean value) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: determineObjectDataType_validDataString
input inputData: string (A string that contains some value that we should figure out what kind of data type that data is, Boolean, Integer, Float, String or something else)
input inputMetaData: string (Not used for this business rule)
output: string (A string that indicates if the data type should be Boolean, Integer, Float, String or something else)

testName: determineObjectDataType_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: determineObjectDataType_inValidDataInputMetaDataString
input inputData: string (A string that contains some value that we should figure out what kind of data type that data is, Boolean, Integer, Float, String or something else) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: determineObjectDataType_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: 123string321
output: ?
status: Failed
error: TypeError: inputData.toLowerCase is not a function

testName: determineObjectDataType_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: 123string321
output: ?

testName: determineObjectDataType_inValidInputMetaDataInteger
input inputData: 234string432
input inputMetaData: integer (4567)
output: ?

testName: determineObjectDataType_inValidInputMetaDataBoolean
input inputData: 234string432
input inputMetaData: boolean (false)
output: ?

testName: determineObjectDataType_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreUndefined)
output: ?

testName: determineObjectDataType_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreNaN)
output: ?

testName: determineObjectDataType_inValidInputMetaDataUndefined
input inputData: string (A string that contains some value that we should figure out what kind of data type that data is, Boolean, Integer, Float, String or something else) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: determineObjectDataType_inValidInputMetaDataNaN
input inputData: string (A string that contains some value that we should figure out what kind of data type that data is, Boolean, Integer, Float, String or something else) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: isBoolean_validDataString
input inputData: string (The string that should be checked if it is a Boolean style value or not, could be some form of "true" or "false")
input inputMetaData: string (Not used for this business rule)
output: boolean

testName: isBoolean_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: isBoolean_inValidDataInputMetaDataString
input inputData: string (The string that should be checked if it is a Boolean style value or not, could be some form of "true" or "false") (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: isBoolean_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: 123string321
output: ?
status: Failed
error: TypeError: inputData.toLowerCase is not a function

testName: isBoolean_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: 123string321
output: ?

testName: isBoolean_inValidInputMetaDataInteger
input inputData: 234string432
input inputMetaData: integer (4567)
output: ?

testName: isBoolean_inValidInputMetaDataBoolean
input inputData: 234string432
input inputMetaData: boolean (false)
output: ?

testName: isBoolean_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreUndefined)
output: ?

testName: isBoolean_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreNaN)
output: ?

testName: isBoolean_inValidInputMetaDataUndefined
input inputData: string (The string that should be checked if it is a Boolean style value or not, could be some form of "true" or "false") (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: isBoolean_inValidInputMetaDataNaN
input inputData: string (The string that should be checked if it is a Boolean style value or not, could be some form of "true" or "false") (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: isInteger_validDataString
input inputData: string (The string that should be checked if it is an integer style value or not)
input inputMetaData: string (Not used for this business rule)
output: boolean

testName: isInteger_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: isInteger_inValidDataInputMetaDataString
input inputData: string (The string that should be checked if it is an integer style value or not) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: isInteger_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: 123string321
output: ?
status: Failed
error: TypeError: inputData.toLowerCase is not a function

testName: isInteger_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: 123string321
output: ?

testName: isInteger_inValidInputMetaDataInteger
input inputData: 234string432
input inputMetaData: string
output: ?

testName: isInteger_inValidInputMetaDataBoolean
input inputData: 234string432
input inputMetaData: string
output: ?

testName: isInteger_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreUndefined)
output: ?

testName: isInteger_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreNaN)
output: ?

testName: isInteger_inValidInputMetaDataUndefined
input inputData: string (The string that should be checked if it is an integer style value or not) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: isInteger_inValidInputMetaDataNaN
input inputData: string (The string that should be checked if it is an integer style value or not) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: isFloat_validDataString
input inputData: string (The string that should be checked if it is an integer style value or not)
input inputMetaData: string (Not used for this business rule)
output: boolean

testName: isFloat_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: isFloat_inValidDataInputMetaDataString
input inputData: string (The string that should be checked if it is an integer style value or not) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: isFloat_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: 123string321
output: ?
status: Failed
error: TypeError: inputData.toLowerCase is not a function

testName: isFloat_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: 123string321
output: ?

testName: isFloat_inValidInputMetaDataInteger
input inputData: 234string432
input inputMetaData: string
output: ?

testName: isFloat_inValidInputMetaDataBoolean
input inputData: 234string432
input inputMetaData: string
output: ?

testName: isFloat_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreUndefined)
output: ?

testName: isFloat_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreNaN)
output: ?

testName: isFloat_inValidInputMetaDataUndefined
input inputData: string (The string that should be checked if it is an integer style value or not) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: isFloat_inValidInputMetaDataNaN
input inputData: string (The string that should be checked if it is an integer style value or not) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: isString_validDataString
input inputData: string (The string that should be checked if it is a string and not a Boolean, Integer or Float)
input inputMetaData: string (Not used for this business rule)
output: boolean

testName: isString_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (Not used for this business rule) (testDataString)
output: ?

testName: isString_inValidDataInputMetaDataString
input inputData: string (The string that should be checked if it is a string and not a Boolean, Integer or Float) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: isString_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: 123string321
output: ?
status: Failed
error: TypeError: inputData.toLowerCase is not a function

testName: isString_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: 123string321
output: ?

testName: isString_inValidInputMetaDataInteger
input inputData: 234string432
input inputMetaData: string
output: ?

testName: isString_inValidInputMetaDataBoolean
input inputData: 234string432
input inputMetaData: string
output: ?

testName: isString_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreUndefined)
output: ?

testName: isString_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (Not used for this business rule) (inValidDataToStoreNaN)
output: ?

testName: isString_inValidInputMetaDataUndefined
input inputData: string (The string that should be checked if it is a string and not a Boolean, Integer or Float) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: isString_inValidInputMetaDataNaN
input inputData: string (The string that should be checked if it is a string and not a Boolean, Integer or Float) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------
testName: replaceDoublePercentWithMessage_validDataString
input inputData: string (The string that might contain the double percentage signs)
input inputMetaData: string (The string that should replace the double percentage signs)
output: string (The modified string with the message inserted)

testName: replaceDoublePercentWithMessage_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: string (The string that should replace the double percentage signs) (testDataString)
output: ?

testName: replaceDoublePercentWithMessage_inValidDataInputMetaDataString
input inputData: string (The string that might contain the double percentage signs) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: replaceDoublePercentWithMessage_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: 123string321
output: ?
status: Failed
error: TypeError: inputData.toLowerCase is not a function

testName: replaceDoublePercentWithMessage_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: 123string321
output: ?

testName: replaceDoublePercentWithMessage_inValidInputMetaDataInteger
input inputData: 234string432
input inputMetaData: integer (4567)
output: ?

testName: replaceDoublePercentWithMessage_inValidInputMetaDataBoolean
input inputData: 234string432
input inputMetaData: boolean (false)
output: ?

testName: replaceDoublePercentWithMessage_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: string (The string that should replace the double percentage signs) (inValidDataToStoreUndefined)
output: ?

testName: replaceDoublePercentWithMessage_inValidInputDataNaN
input inputData: NaN
input inputMetaData: string (The string that should replace the double percentage signs) (inValidDataToStoreNaN)
output: ?

testName: replaceDoublePercentWithMessage_inValidInputMetaDataUndefined
input inputData: string (The string that might contain the double percentage signs) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?

testName: replaceDoublePercentWithMessage_inValidInputMetaDataNaN
input inputData: string (The string that might contain the double percentage signs) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
--------------------------------------------------------------------------------utilitiesReplaceCharacterWithCharacter
testName: 1aggregateCommandArguments_validDataString
input inputData: string (A string that may or may not contain the specified characters that should be converted to another specified character)
input inputMetaData: array<string,string> (An array of data that contains 2 additional string parameters)
output: string (The same as the input string but with specified characters converted to the other specified character)

testName: 1aggregateCommandArguments_inValidDataInputDataString
input inputData: string (dfxg24346dfg)
input inputMetaData: array<string,string> (An array of data that contains 2 additional string parameters) (testDataString)
output: ?

testName: 1aggregateCommandArguments_inValidDataInputMetaDataString
input inputData: string (A string that may or may not contain the specified characters that should be converted to another specified character) (testDataString)
input inputMetaData: string (dfxg24346dfg)
output: ?

testName: 1aggregateCommandArguments_inValidInputDataInteger
input inputData: integer (4567)
input inputMetaData: 123string321
output: ?

testName: 1aggregateCommandArguments_inValidInputDataBoolean
input inputData: boolean (false)
input inputMetaData: 123string321
output: ?
status: Failed
error: TypeError: inputData.replaceAll is not a function

testName: 1aggregateCommandArguments_inValidInputMetaDataInteger
input inputData: 234string432
input inputMetaData: integer (4567)
output: ?

testName: 1aggregateCommandArguments_inValidInputMetaDataBoolean
input inputData: 234string432
input inputMetaData: boolean (false)
output: ?

testName: 1aggregateCommandArguments_inValidInputDataUndefined
input inputData: undefined
input inputMetaData: array<string,string> (An array of data that contains 2 additional string parameters) (inValidDataToStoreUndefined)
output: ?
status: Failed
error: TypeError: Cannot read properties of undefined (reading 'replaceAll')

testName: 1aggregateCommandArguments_inValidInputDataNaN
input inputData: NaN
input inputMetaData: array<string,string> (An array of data that contains 2 additional string parameters) (inValidDataToStoreNaN)
output: ?
status: Failed
error: TypeError: Cannot read properties of undefined (reading 'replaceAll')

testName: 1aggregateCommandArguments_inValidInputMetaDataUndefined
input inputData: string (A string that may or may not contain the specified characters that should be converted to another specified character) (inValidDataToStoreUndefined)
input inputMetaData: undefined
output: ?
status: Failed
error: TypeError: Cannot read properties of undefined (reading '0')

testName: 1aggregateCommandArguments_inValidInputMetaDataNaN
input inputData: string (A string that may or may not contain the specified characters that should be converted to another specified character) (inValidDataToStoreNaN)
input inputMetaData: NaN
output: ?
